cluster.name: docker-cluster
network.host: 0.0.0.0
http.port: 9200
discovery.type: single-node
xpack.security.enabled: false

server.name: kibana
server.host: "0.0.0.0"
elasticsearch.hosts: [ "http://elasticsearch:9200" ]
xpack.security.enabled: false
telemetry.enabled: false


input {
  kafka {
    bootstrap_servers => "localhost:19092"
    topics => ["test-topic"]
    group_id => "logstash-group"
    codec => plain {
      charset => "UTF-8"
    }
  }
}

filter {
  grok {
    match => { "message" => "msg-value-%{NUMBER:msg_value}" }
  }
  mutate {
    convert => { "msg_value" => "integer" }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "kafka-logs-%{+YYYY.MM.dd}"
  }
  stdout { codec => CMD ["/bin/bash", "-c", "\
  export PATH=$JAVA_HOME/bin:$PATH && \
  $CONFLUENT_HOME/bin/zookeeper-server-start /opt/zookeeper.properties & \
  sleep 5 && \
  sed -i 's|zookeeper.connect=.*|zookeeper.connect=localhost:2181|' $CONFLUENT_HOME/etc/kafka/server.properties && \
  sed -i '/^#listeners=/a listeners=PLAINTEXT://0.0.0.0:9092' $CONFLUENT_HOME/etc/kafka/server.properties && \
  sed -i '/^#advertised.listeners=/a advertised.listeners=PLAINTEXT://localhost:9092' $CONFLUENT_HOME/etc/kafka/server.properties && \
  exec $CONFLUENT_HOME/bin/kafka-server-start $CONFLUENT_HOME/etc/kafka/server.properties"]




}
